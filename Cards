import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

interface Comic {
  id: string;
  title: string;
  description: string;
  coverImage: string;
  chapters: number;
  views: number;
  likes: number;
  comments: number;
  subscriptions: number;
  cost: number;
  lastUpdated: string;
}

function CreatorDashboardPage() {
  const navigate = useNavigate();
  const [user, setUser] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [comics, setComics] = useState<Comic[]>([
    {
      id: "1",
      title: "The Adventures of Space Cat",
      description: "Follow Space Cat as he explores the galaxy and makes new friends.",
      coverImage: "/assets/featured_comic1.jpg?height=200&width=200",
      chapters: 12,
      views: 5432,
      likes: 423,
      comments: 87,
      subscriptions: 104,
      cost: 5.99,
      lastUpdated: "2023-04-15",
    },
    {
      id: "2",
      title: "Mystic Realms",
      description: "A fantasy world where magic and technology collide.",
      coverImage: "/assets/featured_comic2.png?height=300&width=200",
      chapters: 8,
      views: 3211,
      likes: 256,
      comments: 42,
      subscriptions: 89,
      cost: 3.5,
      lastUpdated: "2023-05-02",
    },
    {
      id: "3",
      title: "Urban Legends",
      description: "Stories of mysterious happenings in the big city.",
      coverImage: "/assets/featured_comic3.jpg?height=300&width=200",
      chapters: 5,
      views: 1876,
      likes: 132,
      comments: 28,
      subscriptions: 67,
      cost: 2.99,
      lastUpdated: "2023-05-10",
    },
  ]);

  useEffect(() => {
    setTimeout(() => {
      const mockUser = { role: "creator" };
      setUser(mockUser);
      setLoading(false);
    }, 1000);
  }, []);

  useEffect(() => {
    if (!loading) {
      if (!user) navigate('/auth/login');
      else if (user.role !== 'creator') navigate('/');
    }
  }, [loading, user, navigate]);

  if (loading) {
    return <div className="text-center mt-5">Loading...</div>;
  }

  return (
    <div className="container py-4">
      <div className="d-flex justify-content-between align-items-center mb-4">
        <div>
          <h1 style={{ color: 'purple' }}>Creator Dashboard</h1>
          <p>Manage Your comics and track your performance</p>
        </div>
        <button className="btn btn-primary" onClick={() => navigate('/create')}>
          + Create New Comic
        </button>
      </div>

      <ul className="nav nav-tabs mb-4">
        <li className="nav-item">
          <span className="nav-link active" style={{ backgroundColor: 'purple', color: 'white', cursor: 'pointer' }}>
            My Comics
          </span>
        </li>
        <li className="nav-item">
          <span className="nav-link" style={{ backgroundColor: '#f0f0f0', color: 'black', cursor: 'pointer' }}>
            Upload Comics
          </span>
        </li>
      </ul>

      <div className="row">
        {comics.map((comic) => (
          <div key={comic.id} className="col-md-4 mb-4">
            <div className="card h-100 shadow-sm">
              <img src={comic.coverImage} className="card-img-top" alt={comic.title} style={{ height: "400px", objectFit: "cover" }} />
              <div className="card-body d-flex flex-column">
                <h5 className="card-title">{comic.title}</h5>
                <p className="card-text">{comic.description}</p>
                <small className="text-muted">{comic.chapters} chapters - Last updated: {comic.lastUpdated}</small>
                <div className="mt-3">
                  <div className="d-flex justify-content-between text-muted mb-2">
                    <span><i className="bi bi-heart" style={{ color: "red" }}></i> {comic.likes}</span>
                    <span><i className="bi bi-eye" style={{ color: "blue" }}></i> {comic.views}</span>
                  </div>
                  <div className="d-flex justify-content-between text-muted">
                    <span><i className="bi bi-person"></i> {comic.subscriptions}</span>
                    <span>${comic.cost.toFixed(2)}</span>
                  </div>
                </div>
              </div>
              <div className="card-footer d-flex justify-content-between">
                <button className="btn btn-sm btn-outline-primary" onClick={() => navigate(`/comic/${comic.id}/edit`)}>
                  <i className="bi bi-pencil-square"></i> Edit
                </button>
                <button className="btn btn-sm btn-outline-secondary">
                  <i className="bi bi-book"></i> View
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default CreatorDashboardPage;
